from pathlib import Path
from urllib.parse import urlparse
from typing import ClassVar, Final, Optional, Any

from pydantic import field_validator, model_validator, HttpUrl
from pydantic_settings import BaseSettings, SettingsConfigDict
from aiogram.types import ChatAdministratorRights


class Settings(BaseSettings):
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    model_config = SettingsConfigDict(
        env_file=".env",
        env_file_encoding="utf-8",
        extra="ignore",
        case_sensitive=False,
        validate_default=True,
    )

    # –†–µ–∂–∏–º—ã –∏ –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    PYTHONUNBUFFERED: str = "1"
    LOCALE_PATH: str = "locales"

    DEBUG: bool = False
    OWNER: str = "@verdise"

    # –¢–æ–∫–µ–Ω—ã –±–æ—Ç–∞
    BOT_TOKEN: Optional[str] = None
    BOT_DEBUG_TOKEN: Optional[str] = None

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    PARSE_MODE: str = "HTML"
    ENCOD: str = "utf-8"
    TIME_FORMAT: str = "%Y-%m-%d %H:%M:%S"
    PREFIX: str = "/!.&?"
    BOT_LANGUAGE: str = "Aiogram3"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    DISABLE_NOTIFICATION: bool = False
    PROTECT_CONTENT: bool = False
    ALLOW_SENDING_WITHOUT_REPLY: bool = True
    LINK_PREVIEW_IS_DISABLED: bool = False
    LINK_PREVIEW_PREFER_SMALL_MEDIA: bool = False
    LINK_PREVIEW_PREFER_LARGE_MEDIA: bool = True
    LINK_PREVIEW_SHOW_ABOVE_TEXT: bool = True
    SHOW_CAPTION_ABOVE_MEDIA: bool = False

    # –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    BOT_EDIT: bool = False
    START_INFO_CONSOLE: bool = True
    START_INFO_TO_FILE: bool = True
    LOG_CONSOLE: bool = True
    LOG_FILE: bool = True
    LOG_DIR: Path = Path('Logs')
    LOG_FILE_INFO: Path = Path('bot_info.log')

    # –í–µ–±—Ö—É–∫
    WEBHOOK: bool = False
    WEBHOOK_HOST: str = "https://bot_1.primo.dpdns.org"
    WEBHOOK_PATH: str = "/webhook"
    WEBHOOK_URL: str = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

    # API –∫–ª—é—á–∏
    API_KEY: Optional[str] = None
    WEB_API_KEY: Optional[str] = None
    WEATHER_API_KEY: Optional[str] = None

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    TG_API_UID: int = 0
    TG_API_HASH: Optional[str] = None

    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    ADMIN_ID: int = 0
    MODERATOR_ID: int = 0
    IMPORTANT_ID: int = 0
    IMPORTANT_GROUP_ID: int = 0
    IMPORTANT_CHANNEL_ID: int = 0
    SUPPORT_CHAT_ID: int = 0

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    PROJECT_NAME: str = "PRIMO"
    BOT_NAME: str = "–ü–µ—Ä–≤–æ–∑–¥–∞–Ω–Ω–∞—è –ñ–µ–º—á—É–∂–∏–Ω–∞"
    BOT_DESCRIPTION: Optional[str] = None
    BOT_SHORT_DESCRIPTION: Optional[str] = None

    # –†–æ–ª–µ–≤–æ–π –ø—Ä–æ–µ–∫—Ç
    RP_NAME: Optional[str] = "ùòóùò≥ùò™ùòÆùò∞ ùòûùò∞ùò≥ùò≠ùò•"
    INFO_URL: Optional[HttpUrl] = None
    RP_OWNER: Optional[str] = None

    # –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    ANONYMOUS: bool = False
    MANAGE_CHAT: bool = True
    CHANGE_INFO: bool = True
    PROMOTE_MEMBERS: bool = True
    RESTRICT_MEMBERS: bool = True
    POST_MESSAGE: bool = True
    MANAGE_TOPICS: bool = True
    INVITE_USER: bool = True
    DELETE_MESSAGES: bool = True
    MANAGE_VIDEO_CHATS: bool = True
    EDIT_MESSAGES: bool = True
    PIN_MESSAGE: bool = True
    POST_STORIES: bool = True
    EDIT_STORIES: bool = True
    DELETE_STORIES: bool = True

    # ================= –í–ê–õ–ò–î–ê–¢–û–†–´ =================

    @field_validator('PYTHONUNBUFFERED')
    def validate_unbuffered(cls, v: str) -> str:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏"""
        if v not in ('0', '1'):
            raise ValueError("PYTHONUNBUFFERED –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '0' –∏–ª–∏ '1'")
        return v

    @field_validator('PARSE_MODE')
    def validate_parse_mode(cls, v: str) -> str:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–º–µ—Ç–∫–∏"""
        allowed_modes = {"HTML", "Markdown", "MarkdownV2"}
        if v not in allowed_modes:
            raise ValueError(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π PARSE_MODE. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {', '.join(allowed_modes)}")
        return v

    @field_validator('PREFIX')
    def validate_prefix(cls, v: str) -> str:
        """–û—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ –∫–æ–º–∞–Ω–¥"""
        cleaned = ''.join(sorted(set(v), key=v.index))  # –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞
        if len(cleaned) < 1:
            raise ValueError("PREFIX –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª")
        return cleaned

    @field_validator('LOG_DIR', 'LOG_FILE_INFO', mode='before')
    def validate_paths(cls, v: Any) -> Path:
        """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ–π –≤ –æ–±—ä–µ–∫—Ç—ã Path"""
        return Path(v) if isinstance(v, str) else v

    @field_validator('TG_API_UID', 'ADMIN_ID', 'MODERATOR_ID')
    def validate_ids(cls, v: int) -> int:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤"""
        if v < 0:
            raise ValueError("ID –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
        return v

    @field_validator('WEBHOOK_URL')
    def validate_webhook_url(cls, v: str) -> str:
        """–ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ URL –≤–µ–±—Ö—É–∫–∞"""
        parsed = urlparse(v)
        if not all([parsed.scheme, parsed.netloc]):
            raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –≤–µ–±—Ö—É–∫–∞")
        return v

    @field_validator('BOT_NAME', 'PROJECT_NAME', 'OWNER')
    def validate_non_empty(cls, v: str) -> str:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫"""
        if not v.strip():
            raise ValueError("–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return v

    @model_validator(mode='after')
    def validate_bot_token(cls, setting: "Settings") -> "Settings":
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤"""
        if setting.DEBUG and not setting.BOT_DEBUG_TOKEN:
            raise ValueError("–¢—Ä–µ–±—É–µ—Ç—Å—è BOT_DEBUG_TOKEN –≤ —Ä–µ–∂–∏–º–µ DEBUG")
        if not setting.DEBUG and not setting.BOT_TOKEN:
            raise ValueError("–¢—Ä–µ–±—É–µ—Ç—Å—è BOT_TOKEN –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ —Ä–µ–∂–∏–º–∞")
        return setting

    @model_validator(mode='after')
    def validate_webhook_config(cls, setting: "Settings") -> "Settings":
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–µ–±—Ö—É–∫–∞"""
        if setting.WEBHOOK and not setting.WEBHOOK_URL:
            raise ValueError("WEBHOOK_URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º WEBHOOK")
        return setting

    @model_validator(mode='after')
    def validate_logging_paths(cls, setting: "Settings") -> "Settings":
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
        if setting.LOG_FILE and not setting.LOG_DIR.exists():
            setting.LOG_DIR.mkdir(parents=True, exist_ok=True)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: setting –≤–º–µ—Å—Ç–æ settings
        return setting

    @model_validator(mode='after')
    def set_dynamic_descriptions(cls, setting: "Settings") -> "Settings":
        """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏–π –±–æ—Ç–∞"""
        if setting.BOT_DESCRIPTION is None:
            # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: setting –≤–º–µ—Å—Ç–æ settings
            setting.BOT_DESCRIPTION = f"–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º–∏—Ä—ã! Prod. by:„Äé{setting.OWNER}„Äè"
        if setting.BOT_SHORT_DESCRIPTION is None:
            setting.BOT_SHORT_DESCRIPTION = f"–¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞: {setting.OWNER}"
        return setting

    # ================= –°–í–û–ô–°–¢–í–ê =================

    @property
    def rights(self) -> ChatAdministratorRights:
        """–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞"""
        return ChatAdministratorRights(
            is_anonymous=self.ANONYMOUS,
            can_manage_chat=self.MANAGE_CHAT,
            can_delete_messages=self.DELETE_MESSAGES,
            can_manage_video_chats=self.MANAGE_VIDEO_CHATS,
            can_restrict_members=self.RESTRICT_MEMBERS,
            can_promote_members=self.PROMOTE_MEMBERS,
            can_change_info=self.CHANGE_INFO,
            can_invite_users=self.INVITE_USER,
            can_post_stories=self.POST_STORIES,
            can_edit_stories=self.EDIT_STORIES,
            can_delete_stories=self.DELETE_STORIES,
            can_post_messages=self.POST_MESSAGE,
            can_edit_messages=self.EDIT_MESSAGES,
            can_pin_messages=self.PIN_MESSAGE,
            can_manage_topics=self.MANAGE_TOPICS,
        )

    @property
    def active_bot_token(self) -> str:
        """–ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞"""
        token = self.BOT_DEBUG_TOKEN if self.DEBUG else self.BOT_TOKEN
        if not token:
            raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return token

    @property
    def log_dir_absolute(self) -> Path:
        """–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤"""
        return self.LOG_DIR.absolute()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings: Settings = Settings()


# –ö–ª–∞—Å—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏ —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

class BotSettings:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞."""
    DEBUG: Final[bool] = settings.DEBUG
    OWNER: Final[str] = settings.OWNER
    BOT_TOKEN: Final[str] = settings.active_bot_token
    PARSE_MODE: Final[str] = settings.PARSE_MODE
    ENCOD: Final[str] = settings.ENCOD
    TIME_FORMAT: Final[str] = settings.TIME_FORMAT
    PREFIX: Final[str] = settings.PREFIX
    BOT_LANGUAGE: Final[str] = settings.BOT_LANGUAGE
    DISABLE_NOTIFICATION: Final[bool] = settings.DISABLE_NOTIFICATION
    PROTECT_CONTENT: Final[bool] = settings.PROTECT_CONTENT
    ALLOW_SENDING_WITHOUT_REPLY: Final[bool] = settings.ALLOW_SENDING_WITHOUT_REPLY
    LINK_PREVIEW_IS_DISABLED: Final[bool] = settings.LINK_PREVIEW_IS_DISABLED
    LINK_PREVIEW_PREFER_SMALL_MEDIA: Final[bool] = settings.LINK_PREVIEW_PREFER_SMALL_MEDIA
    LINK_PREVIEW_PREFER_LARGE_MEDIA: Final[bool] = settings.LINK_PREVIEW_PREFER_LARGE_MEDIA
    LINK_PREVIEW_SHOW_ABOVE_TEXT: Final[bool] = settings.LINK_PREVIEW_SHOW_ABOVE_TEXT
    SHOW_CAPTION_ABOVE_MEDIA: Final[bool] = settings.SHOW_CAPTION_ABOVE_MEDIA


class Permission:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π."""
    BOT_EDIT: Final[bool] = settings.BOT_EDIT
    START_INFO_CONSOLE: Final[bool] = settings.START_INFO_CONSOLE
    START_INFO_TO_FILE: Final[bool] = settings.START_INFO_TO_FILE


class LogConfig:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–æ–≥–æ–≤."""
    CONSOLE: Final[bool] = settings.LOG_CONSOLE
    FILE: Final[bool] = settings.LOG_FILE
    DIR: Final[Path] = settings.LOG_DIR
    FILE_INFO: Final[Path] = settings.LOG_FILE_INFO
    ROTATION: ClassVar[str] = '100 MB'
    RETENTION: ClassVar[str] = '7 days'


class Webhook:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –≤–µ–±—Ö—É–∫–∞."""
    WEBHOOK: Final[bool] = settings.WEBHOOK
    WEBHOOK_HOST = settings.WEBHOOK_HOST
    WEBHOOK_PATH = settings.WEBHOOK_PATH
    WEBHOOK_URL = settings.WEBHOOK_URL


class APISettings:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è API."""
    API_KEY: Final[Optional[str]] = settings.API_KEY
    WEB_API_KEY: Final[Optional[str]] = settings.WEB_API_KEY
    WEATHER_API_KEY: Final[Optional[str]] = settings.WEATHER_API_KEY


class UserIn:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö."""
    TG_API_UID: Final[int] = settings.TG_API_UID
    TG_API_HASH: Final[Optional[str]] = settings.TG_API_HASH


class ImportantID:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –≤–∞–∂–Ω—ã—Ö ID."""
    ADMIN_ID: Final[int] = settings.ADMIN_ID
    MODERATOR_ID: Final[int] = settings.MODERATOR_ID
    IMPORTANT_ID: Final[int] = settings.IMPORTANT_ID
    IMPORTANT_GROUP_ID: Final[int] = settings.IMPORTANT_GROUP_ID
    IMPORTANT_CHANNEL_ID: Final[int] = settings.IMPORTANT_CHANNEL_ID


class BotEdit:
    """–ê–ª–∏–∞—Å—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞."""
    ALLOW_PERMISSION: Final[bool] = settings.BOT_EDIT
    PROJECT_NAME: Final[str] = settings.PROJECT_NAME
    NAME: Final[str] = settings.BOT_NAME
    DESCRIPTION: Final[str] = settings.BOT_DESCRIPTION
    SHORT_DESCRIPTION: Final[str] = settings.BOT_SHORT_DESCRIPTION
    ANONYMOUS: Final[bool] = settings.ANONYMOUS
    MANAGE_CHAT: Final[bool] = settings.MANAGE_CHAT
    CHANGE_INFO: Final[bool] = settings.CHANGE_INFO
    PROMOTE_MEMBERS: Final[bool] = settings.PROMOTE_MEMBERS
    RESTRICT_MEMBERS: Final[bool] = settings.RESTRICT_MEMBERS
    POST_MESSAGE: Final[bool] = settings.POST_MESSAGE
    MANAGE_TOPICS: Final[bool] = settings.MANAGE_TOPICS
    INVITE_USER: Final[bool] = settings.INVITE_USER
    DELETE_MESSAGES: Final[bool] = settings.DELETE_MESSAGES
    MANAGE_VIDEO_CHATS: Final[bool] = settings.MANAGE_VIDEO_CHATS
    EDIT_MESSAGES: Final[bool] = settings.EDIT_MESSAGES
    PIN_MESSAGE: Final[bool] = settings.PIN_MESSAGE
    POST_STORIES: Final[bool] = settings.POST_STORIES
    EDIT_STORIES: Final[bool] = settings.EDIT_STORIES
    DELETE_STORIES: Final[bool] = settings.DELETE_STORIES
    RIGHTS: Final[ChatAdministratorRights] = settings.rights


class RpValue:
    """–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–æ–ª–µ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º."""
    RP_NAME: Final[str] = settings.RP_NAME
    INFO_URL: str = settings.INFO_URL
    RP_OWNER: str = settings.RP_OWNER


class Project:
    POSTS_DIR: ClassVar[Path] = Path('posts')


class Lists:
   """–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–ø–∏—Å–∫–∏ —Ñ–∞–∫—Ç–æ–≤, —Ü–∏—Ç–∞—Ç –∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
   facts: list[str] = [
       "Python –±—ã–ª —Å–æ–∑–¥–∞–Ω –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º–æ–º –≤ 1991 –≥–æ–¥—É.",
       "–ò–º–µ–Ω–∞ Python –∏ Monty Python —Å–≤—è–∑–∞–Ω—ã ‚Äî —è–∑—ã–∫ –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å —à–æ—É.",
       "Python ‚Äî —è–∑—ã–∫ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π.",
       "–í Python –≤—Å—ë —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º, –¥–∞–∂–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö.",
       "–°–ø–∏—Å–∫–∏ –≤ Python ‚Äî —ç—Ç–æ –∏–∑–º–µ–Ω—è–µ–º—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π.",
       "Python –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–¥–∏–≥–º—ã –û–û–ü, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –∏–º–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
       "Zen of Python –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å, –Ω–∞–±—Ä–∞–≤ `import this` –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–µ.",
   ]
   jokes: list[str] = [
       "1",
       "2",
       "3",
       "4",
   ]
   quotes: list[str] = [
       "5",
       "6",
       "7",
       "8",
   ]



# –≠–∫—Å–ø–æ—Ä—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
__all__ = (
    "BotSettings",
    "LogConfig",
    "Webhook",
    "APISettings",
    "UserIn",
    "ImportantID",
    "Permission",
    "BotEdit",
    "Project",
    "RpValue",
    'settings',
    'Lists',
)